# Events Block: This block configures parameters that affect connection processing. 
# In this context, it’s empty because the default settings are sufficient for basic operations.
events { }

# HTTP Block: This block encloses all HTTP-related configurations.
http {
    # Server Block: This defines a server that listens on port 80, which is the standard HTTP port.
    server {
        listen 80;
        
        # This block matches all requests that do not have a more specific location defined (the default route).
        location / {
            proxy_http_version 1.1;
            # proxy_set_header Upgrade $http_upgrade; and proxy_set_header Connection 'upgrade'; 
            # These headers are crucial for supporting WebSocket connections. 
            # They tell Nginx to pass the Upgrade and Connection headers from the client to the proxied server, 
            # which is necessary for protocols like WebSockets.
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            
            # Forwards all requests from this location to the application running on app service at port 3000
            proxy_pass http://app;
        }
        
        # This location block specifically matches requests starting with /api/.
        location /api/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        
        # Forwards requests to the server service at port 3000, where your backend is running. 
        # The trailing slash after the port (proxy_pass http://server:3000/) in the proxy_pass directive can alter the original request URI sent to the backend 
        # (it effectively strips the part of the URI that matches the location block).
        # With this setup, a request to http://yourdomain.com/api/users results in the URI being modified before it's forwarded. 
        # The part of the URI that matches the location (/api/) is removed, so the request that server:3000 receives is http://server:3000/users 
        # — the /api/ is stripped off.
        proxy_pass http://server:3001;
        }
    }
}