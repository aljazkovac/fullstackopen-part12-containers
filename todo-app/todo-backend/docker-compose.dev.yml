# Specifies the version of the Docker compose file format.
version: '3.8'

# Defines the services (containers).
services:
  mongo:
    image: mongo
    # Map port on the host to port inside the container.
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      # Mounts a MongoDB initialization script.
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      # Persists MongoDB data by mapping a directory on the host to the MongoDB data directory inside the container.
      - ./mongo_data:/data/db
  redis:
    image: redis:latest
    ports:
      # Map port on the host to port inside the container.
      - 6379:6379
    # Overwrites the default CMD to start Redis with append-only mode enabled (provides durability by logging every
    # write operation to disk.
    command: ['redis-server', '--appendonly', 'yes'] 
    # Persists Redis data by mapping a directory on the host to the Redis data directory inside the container.
    volumes:
      - ./redis_data:/data
  server:
    build:
      context: .
      dockerfile: dev.Dockerfile
    ports:
      - "3000:3000"
    # Mounts the current directory on the host to the given directory inside the container. This allows for real-time 
    # code changes without rebuilding the container.
    volumes:
      - .:/usr/src/app
    environment:
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://root:example@mongo:3456/the_database
    depends_on:
      - mongo
      - redis
        
volumes:
  mongo_data:
  redis_data: 