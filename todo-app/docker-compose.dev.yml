services:
  app:
    image: todo-frontend
    build:
      context: ./todo-frontend # The context will pick this directory as the "build context"
      dockerfile: dev.Dockerfile # This will simply tell which dockerfile to read
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8080/api/
    volumes:
      - ./todo-frontend:/usr/src/app
    container_name: frontend
  mongo:
    image: mongo
    # Map port on the host to port inside the container.
    ports:
      - "3456:27017"
    volumes:
      # Mounts a MongoDB initialization script.
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      # Persists MongoDB data by mapping a directory on the host to the MongoDB data directory inside the container.
      - ./todo-backend/mongo_data:/data/db
    container_name: mongo
  redis:
    image: redis:latest
    ports:
      # Map port on the host to port inside the container.
      - "6379:6379"
    # Overwrites the default CMD to start Redis with append-only mode enabled (provides durability by logging every
    # write operation to disk.
    command: ['redis-server', '--appendonly', 'yes'] 
    # Persists Redis data by mapping a directory on the host to the Redis data directory inside the container.
    volumes:
      - ./todo-backend/redis_data:/data
    container_name: redis
  server:
    image: todo-backend
    build:
      context: ./todo-backend
      dockerfile: dev.Dockerfile
    # Mounts the current directory on the host to the given directory inside the container. This allows for real-time 
    # code changes without rebuilding the container.
    volumes:
      - ./todo-backend:/usr/src/app
    environment:
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
    depends_on:
      - mongo
      - redis
    container_name: backend
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - app 
      - server
